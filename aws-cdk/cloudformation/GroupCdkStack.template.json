{
 "Resources": {
  "TaskDefinitionTaskRoleFD40A61D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/TaskDefinition/TaskRole/Resource"
   }
  },
  "TaskDefinitionB36D86D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 128,
      "Environment": [
       {
        "Name": "AWS_SECRET_ID",
        "Value": {
         "Fn::ImportValue": "dbSecretName"
        }
       }
      ],
      "Essential": true,
      "Image": "nginx",
      "Memory": 512,
      "Name": "ContainerDefinition",
      "PortMappings": [
       {
        "ContainerPort": 0,
        "HostPort": 0,
        "Protocol": "tcp"
       }
      ],
      "VolumesFrom": [
       {
        "ReadOnly": false,
        "SourceContainer": "container-volume"
       }
      ]
     }
    ],
    "Cpu": "128",
    "Family": "camille-dev-g1",
    "Memory": "512",
    "NetworkMode": "bridge",
    "RequiresCompatibilities": [
     "EC2"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskDefinitionTaskRoleFD40A61D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/TaskDefinition/Resource"
   }
  },
  "ApplicationTargetGroup39BF8D27": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckEnabled": true,
    "HealthCheckIntervalSeconds": 5,
    "HealthCheckPath": "/health",
    "HealthCheckPort": "traffic-port",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 3,
    "HealthyThresholdCount": 10,
    "Matcher": {
     "HttpCode": "200"
    },
    "Name": "camille-dev-g1",
    "Port": 443,
    "Protocol": "HTTPS",
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "300"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "UnhealthyThresholdCount": 3,
    "VpcId": "vpc-0e33f5d05150f5e8a"
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/ApplicationTargetGroup/Resource"
   }
  },
  "Ec2Service04A33183": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "ECSClusterName"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DeploymentController": {
     "Type": "ECS"
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "EC2",
    "LoadBalancers": [
     {
      "ContainerName": "ContainerDefinition",
      "ContainerPort": 0,
      "TargetGroupArn": {
       "Ref": "ApplicationTargetGroup39BF8D27"
      }
     }
    ],
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "camille-dev-g1",
    "TaskDefinition": {
     "Ref": "TaskDefinitionB36D86D9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/Ec2Service/Service"
   }
  },
  "ListenerRule": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "ApplicationTargetGroup39BF8D27"
      },
      "Type": "forword"
     }
    ],
    "Conditions": [
     {
      "Field": "path-pattern",
      "Values": [
       "*"
      ]
     }
    ],
    "ListenerArn": {
     "Fn::ImportValue": "camille-dev-ActiveListener"
    },
    "Priority": 30
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/ListenerRule"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11PQXLCMAx8S++OKAGGc6ft9AKXhDujOIIRcWSP7YSDJ3/HIRzanlbaWe1qS9js4P0N76HQbVcYbiDVEXWnPi9yROdYrqqiYAevSWXZOZEOkE4Yui+6sHBkK7P4P2MlIgv5X9y3LmvyI2enfPAaJ8XYQ6qsebIzTooMhsjaWGwbNCg6vzGWkD6cM6xxdjuhv1L88XZwS/yf9cAhUk6vhmw3PY1fJSYltiW4hdW43sJ6n9vfAnPhB4ncE1QLPgC9192/GQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}