{
 "Resources": {
  "SGfromGroupCdkStackListenerSecurityGroupsg03ad584c72ecd6ba0B1DE866E3276865535E1B9B972": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 32768,
    "GroupId": "sg-0f4ac3813d0959eb3",
    "SourceSecurityGroupId": "sg-03ad584c72ecd6ba0",
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/SG/from GroupCdkStackListenerSecurityGroupsg03ad584c72ecd6ba0B1DE866E:32768-65535"
   }
  },
  "TaskDefinitionTaskRoleFD40A61D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/TaskDefinition/TaskRole/Resource"
   }
  },
  "TaskDefinitionB36D86D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "nginx",
      "Memory": 512,
      "Name": "TheContainer",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "HostPort": 0,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Family": "GroupCdkStackTaskDefinitionFF36FCCE",
    "NetworkMode": "bridge",
    "RequiresCompatibilities": [
     "EC2"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskDefinitionTaskRoleFD40A61D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/TaskDefinition/Resource"
   }
  },
  "ApplicationTargetGroup39BF8D27": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckEnabled": true,
    "HealthCheckIntervalSeconds": 5,
    "HealthCheckPath": "/health",
    "HealthCheckPort": "traffic-port",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 3,
    "HealthyThresholdCount": 10,
    "Matcher": {
     "HttpCode": "200"
    },
    "Name": "camille-dev-g1",
    "Port": 443,
    "Protocol": "HTTPS",
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "300"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "UnhealthyThresholdCount": 3,
    "VpcId": "vpc-0e33f5d05150f5e8a"
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/ApplicationTargetGroup/Resource"
   }
  },
  "Ec2Service04A33183": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "ECSClusterName"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DeploymentController": {
     "Type": "ECS"
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "EC2",
    "LoadBalancers": [
     {
      "ContainerName": "TheContainer",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "ApplicationTargetGroup39BF8D27"
      }
     }
    ],
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "camille-dev-g1",
    "TaskDefinition": {
     "Ref": "TaskDefinitionB36D86D9"
    }
   },
   "DependsOn": [
    "ListenerRule73F9AC5E"
   ],
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/Ec2Service/Service"
   }
  },
  "Ec2ServiceTaskCountTargetD03D7D86": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 2,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Fn::ImportValue": "ECSClusterName"
       },
       "/",
       {
        "Fn::GetAtt": [
         "Ec2Service04A33183",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::824709318323:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/Ec2Service/TaskCount/Target/Resource"
   }
  },
  "Ec2ServiceTaskCountTargetCpuScalingBEC72530": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "GroupCdkStackEc2ServiceTaskCountTargetCpuScalingC46E10A9",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "Ec2ServiceTaskCountTargetD03D7D86"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 60
    }
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/Ec2Service/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "ListenerSecurityGroupsg03ad584c72ecd6ba0toGroupCdkStackSG5C449E2532768655355FE5A023": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": "sg-03ad584c72ecd6ba0",
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": "sg-0f4ac3813d0959eb3",
    "FromPort": 32768,
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/Listener/SecurityGroup-sg-03ad584c72ecd6ba0/to GroupCdkStackSG5C449E25:32768-65535"
   }
  },
  "ListenerRule73F9AC5E": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "ApplicationTargetGroup39BF8D27"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "*"
       ]
      }
     }
    ],
    "ListenerArn": "arn:aws:elasticloadbalancing:ap-south-1:824709318323:listener/app/camille-dev/55af9341e977fdc5/0eec4fc678799f65",
    "Priority": 30
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/ListenerRule/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11RTU/DMAz9LdzTwAqIMxoTQgIJtb0jN/Uqr1lS5aNoqvLfcVvYyk6OX56fn+1c3j/Kuxv49plqukxTLccygOrEdm8+oO/JtKJAb6NTKJj2NaLK5ci/JaroKJxenY39m2kdei+u8d0MJ4HKy3Gn8gp894J7MhTImol+jVgTgAy6FcZ1JbqB2MGsvzxLBRpqjZPA1kYTkiA4yrGweuZNkRtr8IGUttDUzDeKBxp4gOe+16Rg0q/AtRhmu4uhS7pivZMPyL6KuMiv8yTgQoQYrGdv3Ih3eTY5ic72/yNLqByvnAvKpe7Tstjpj30GUprn+r1GEsY2KA/+dtg8yM0Tn/HgiTLHq6AjymKJP395RfbiAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "GroupCdkStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}